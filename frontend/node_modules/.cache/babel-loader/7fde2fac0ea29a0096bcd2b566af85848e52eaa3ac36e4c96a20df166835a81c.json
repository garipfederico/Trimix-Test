{"ast":null,"code":"import axios from \"axios\";\nconst API_URL = 'http://localhost:3010/personas';\nconst getPersonas = () => {\n  return axios.get(API_URL).then(res => {\n    console.log('hola');\n    console.log(res.data);\n    return res.data;\n  }).catch(error => {\n    return handleError(error);\n  });\n};\nconst postPersonas = persona => {\n  return axios.post(API_URL, persona).then(res).then();\n};\nconst handleError = error => {\n  if (error.response) {\n    console.log(\"Error en la respuesta, mensaje: \", error.response.data);\n    console.log(\"Status code: \", error.response.status);\n    console.log(\"Headers: \", error.response.headers);\n  } else if (error.request) {\n    console.log(\"Error en la solicitud:\", error.request);\n  } else {\n    console.log(\"Error desconocido: \", error.message);\n  }\n  return error;\n};\nconst personaService = {\n  getPersonas\n};\nexport default personaService;","map":{"version":3,"names":["axios","API_URL","getPersonas","get","then","res","console","log","data","catch","error","handleError","postPersonas","persona","post","response","status","headers","request","message","personaService"],"sources":["C:/Users/fede_/0Repositorios/Trimix-Test/frontend/src/services/personas.services.js"],"sourcesContent":["import axios from \"axios\"\r\n\r\nconst API_URL = 'http://localhost:3010/personas'\r\n\r\nconst getPersonas = () => {\r\n    return axios.get(API_URL)\r\n    .then((res) => {\r\n        console.log('hola');\r\n        console.log(res.data);\r\n    return res.data}\r\n        )\r\n    .catch((error) =>{\r\n        return handleError(error)\r\n    })\r\n}\r\n\r\nconst postPersonas = (persona) => {\r\n    return axios.post(API_URL, persona)\r\n    .then(res)\r\n    .then()\r\n}\r\n\r\nconst handleError = (error) => {\r\n    if (error.response) {\r\n        console.log(\"Error en la respuesta, mensaje: \", error.response.data);\r\n        console.log(\"Status code: \", error.response.status);\r\n        console.log(\"Headers: \", error.response.headers);\r\n    } else if (error.request) {\r\n        console.log(\"Error en la solicitud:\", error.request);\r\n    } else {\r\n        console.log(\"Error desconocido: \", error.message);\r\n    }\r\n    return error;\r\n};\r\n\r\nconst personaService = {\r\n    getPersonas,\r\n}\r\n\r\nexport default personaService;"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,OAAO,GAAG,gCAAgC;AAEhD,MAAMC,WAAW,GAAG,MAAM;EACtB,OAAOF,KAAK,CAACG,GAAG,CAACF,OAAO,CAAC,CACxBG,IAAI,CAAEC,GAAG,IAAK;IACXC,OAAO,CAACC,GAAG,CAAC,MAAM,CAAC;IACnBD,OAAO,CAACC,GAAG,CAACF,GAAG,CAACG,IAAI,CAAC;IACzB,OAAOH,GAAG,CAACG,IAAI;EAAA,CAAC,CACX,CACJC,KAAK,CAAEC,KAAK,IAAI;IACb,OAAOC,WAAW,CAACD,KAAK,CAAC;EAC7B,CAAC,CAAC;AACN,CAAC;AAED,MAAME,YAAY,GAAIC,OAAO,IAAK;EAC9B,OAAOb,KAAK,CAACc,IAAI,CAACb,OAAO,EAAEY,OAAO,CAAC,CAClCT,IAAI,CAACC,GAAG,CAAC,CACTD,IAAI,EAAE;AACX,CAAC;AAED,MAAMO,WAAW,GAAID,KAAK,IAAK;EAC3B,IAAIA,KAAK,CAACK,QAAQ,EAAE;IAChBT,OAAO,CAACC,GAAG,CAAC,kCAAkC,EAAEG,KAAK,CAACK,QAAQ,CAACP,IAAI,CAAC;IACpEF,OAAO,CAACC,GAAG,CAAC,eAAe,EAAEG,KAAK,CAACK,QAAQ,CAACC,MAAM,CAAC;IACnDV,OAAO,CAACC,GAAG,CAAC,WAAW,EAAEG,KAAK,CAACK,QAAQ,CAACE,OAAO,CAAC;EACpD,CAAC,MAAM,IAAIP,KAAK,CAACQ,OAAO,EAAE;IACtBZ,OAAO,CAACC,GAAG,CAAC,wBAAwB,EAAEG,KAAK,CAACQ,OAAO,CAAC;EACxD,CAAC,MAAM;IACHZ,OAAO,CAACC,GAAG,CAAC,qBAAqB,EAAEG,KAAK,CAACS,OAAO,CAAC;EACrD;EACA,OAAOT,KAAK;AAChB,CAAC;AAED,MAAMU,cAAc,GAAG;EACnBlB;AACJ,CAAC;AAED,eAAekB,cAAc"},"metadata":{},"sourceType":"module","externalDependencies":[]}