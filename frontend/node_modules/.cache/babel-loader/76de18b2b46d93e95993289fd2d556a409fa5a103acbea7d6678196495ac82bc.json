{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\fede_\\\\0Repositorios\\\\Trimix-Test\\\\frontend\\\\src\\\\components\\\\PersonaAE\\\\PersonaAE.js\";\nimport React from 'react';\nimport { Box, Button, Divider, Paper, Stack, TextField, Typography } from '@mui/material';\nimport { grey } from \"@mui/material/colors\";\nimport GenericComboBox from '../reusables/GenericComboBox';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction PersonaAE() {\n  const paperStyle = {\n    sx: {\n      width: \"100%\",\n      minWidth: \"250px\",\n      mb: 3\n    }\n  };\n  const boxStyle = {\n    sx: {\n      width: \"100vw\",\n      minHeight: \"100vh\",\n      height: \"100%\",\n      backgroundColor: \"#dbdbdb\",\n      m: 0,\n      py: 2\n    }\n  };\n  const textLabel = {\n    variant: \"body1\",\n    color: grey[700],\n    style: {\n      fontWeight: \"600\"\n    }\n  };\n  const stackHeaderStyle = {\n    direction: \"row\",\n    justifyContent: \"space-between\",\n    sx: {\n      my: 2\n    }\n  };\n  const inputsStackStyle = {\n    sx: {\n      width: \"25%\",\n      minWidth: \"200px\",\n      mr: 2\n    }\n  };\n  const newButtonStyle = {\n    variant: \"contained\",\n    size: \"small\",\n    color: \"success\",\n    sx: {}\n  };\n  const searchButtonStyle = {\n    variant: \"contained\",\n    size: \"small\",\n    color: \"primary\",\n    sx: {}\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Paper, {\n      ...paperStyle,\n      children: /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          p: 1\n        },\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h5\",\n          children: \"Datos Generales\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Stack, {\n          flexDirection: {\n            xs: \"column\",\n            sm: \"row\"\n          },\n          sx: {\n            mt: 2\n          },\n          children: [/*#__PURE__*/_jsxDEV(Stack, {\n            ...inputsStackStyle,\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              ...textLabel,\n              children: \"Nombre\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 67,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(TextField\n            // value={nombre}\n            , {\n              onChange: event => {\n                // setNombre(event.target.value);\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 68,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Stack, {\n            ...inputsStackStyle,\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              ...textLabel,\n              children: \"Tipo documento\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 76,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(GenericComboBox\n            // label=\"Tipo de documento\"\n            , {\n              id: \"tipoDoc\"\n              // value={tipoDoc}\n              ,\n              handleChange: event => {\n                // setTipoDoc(event.target.value);\n              },\n              editable: true,\n              valueForNone: \"dfd\",\n              labelForNone: \"Seleccionar tipo de documento\",\n              values: [\"DNI\", \"Pasaporte\", \"L.E.\"],\n              minWidth: 200\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 79,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Stack, {\n          direction: \"row\",\n          justifyContent: \"flex-end\",\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            ...searchButtonStyle,\n            children: \"Buscar\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 6\n    }, this)\n  }, void 0, false);\n}\n_c = PersonaAE;\nexport default PersonaAE;\nvar _c;\n$RefreshReg$(_c, \"PersonaAE\");","map":{"version":3,"names":["React","Box","Button","Divider","Paper","Stack","TextField","Typography","grey","GenericComboBox","PersonaAE","paperStyle","sx","width","minWidth","mb","boxStyle","minHeight","height","backgroundColor","m","py","textLabel","variant","color","style","fontWeight","stackHeaderStyle","direction","justifyContent","my","inputsStackStyle","mr","newButtonStyle","size","searchButtonStyle","p","xs","sm","mt","event"],"sources":["C:/Users/fede_/0Repositorios/Trimix-Test/frontend/src/components/PersonaAE/PersonaAE.js"],"sourcesContent":["import React from 'react'\r\nimport { Box, Button, Divider, Paper, Stack, TextField, Typography } from '@mui/material';\r\nimport { grey } from \"@mui/material/colors\";\r\nimport GenericComboBox from '../reusables/GenericComboBox';\r\n\r\nfunction PersonaAE() {\r\n    const paperStyle = {\r\n        sx: {\r\n            width: \"100%\",\r\n            minWidth: \"250px\",\r\n            mb: 3,\r\n        },\r\n    };\r\n\r\n    const boxStyle = {\r\n        sx: {\r\n            width: \"100vw\",\r\n            minHeight: \"100vh\",\r\n            height: \"100%\",\r\n            backgroundColor: \"#dbdbdb\",\r\n            m: 0,\r\n            py: 2,\r\n        },\r\n    };\r\n\r\n    const textLabel = {\r\n        variant: \"body1\",\r\n        color: grey[700],\r\n        style: { fontWeight: \"600\" },\r\n    };\r\n\r\n    const stackHeaderStyle = {\r\n        direction: \"row\",\r\n        justifyContent: \"space-between\",\r\n        sx: { my: 2 },\r\n    };\r\n\r\n    const inputsStackStyle = {\r\n        sx: { width: \"25%\", minWidth: \"200px\", mr: 2 },\r\n    };\r\n\r\n    const newButtonStyle = {\r\n        variant: \"contained\",\r\n        size: \"small\",\r\n        color: \"success\",\r\n        sx: {},\r\n    };\r\n\r\n    const searchButtonStyle = {\r\n        variant: \"contained\",\r\n        size: \"small\",\r\n        color: \"primary\",\r\n        sx: {},\r\n    };\r\n\r\n  return (\r\n    <>\r\n     <Paper {...paperStyle}>\r\n                <Box sx={{ p: 1 }}>\r\n                    <Typography variant={\"h5\"}>Datos Generales</Typography>\r\n                    <Divider />\r\n                    <Stack\r\n                        flexDirection={{ xs: \"column\", sm: \"row\" }}\r\n                        sx={{ mt: 2 }}\r\n                    >\r\n                        <Stack {...inputsStackStyle}>\r\n                            <Typography {...textLabel}>Nombre</Typography>\r\n                            <TextField\r\n                                // value={nombre}\r\n                                onChange={(event) => {\r\n                                    // setNombre(event.target.value);\r\n                                }}\r\n                            />\r\n                        </Stack>\r\n                        <Stack {...inputsStackStyle}>\r\n                            <Typography {...textLabel}>\r\n                                Tipo documento\r\n                            </Typography>\r\n                            <GenericComboBox\r\n                                // label=\"Tipo de documento\"\r\n                                id=\"tipoDoc\"\r\n                                // value={tipoDoc}\r\n                                handleChange={(event) => {\r\n                                    // setTipoDoc(event.target.value);\r\n                                }}\r\n                                editable={true}\r\n                                valueForNone=\"dfd\"\r\n                                labelForNone=\"Seleccionar tipo de documento\"\r\n                                values={[\"DNI\", \"Pasaporte\", \"L.E.\"]}\r\n                                minWidth={200}\r\n                            />\r\n                        </Stack>\r\n                    </Stack>\r\n                    <Stack direction={\"row\"} justifyContent={\"flex-end\"}>\r\n                        <Button {...searchButtonStyle}>\r\n                            {/* <Search /> */}\r\n                            Buscar\r\n                        </Button>\r\n                    </Stack>\r\n                </Box>\r\n            </Paper>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default PersonaAE"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}