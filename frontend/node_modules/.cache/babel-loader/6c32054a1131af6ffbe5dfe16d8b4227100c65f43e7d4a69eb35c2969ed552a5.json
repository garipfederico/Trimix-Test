{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\fede_\\\\0Repositorios\\\\Trimix-Test\\\\frontend\\\\src\\\\components\\\\ClientesBusqueda\\\\TablesClient.js\",\n  _s = $RefreshSig$();\nimport * as React from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport Paper from '@mui/material/Paper';\nimport Table from '@mui/material/Table';\nimport TableBody from '@mui/material/TableBody';\nimport TableCell from '@mui/material/TableCell';\nimport TableContainer from '@mui/material/TableContainer';\nimport TableHead from '@mui/material/TableHead';\nimport TablePagination from '@mui/material/TablePagination';\nimport TableRow from '@mui/material/TableRow';\nimport { useMediaQuery, Grid } from '@mui/material';\nimport TablesClientRow from './TablesClientRow';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function TablesClient(props) {\n  _s();\n  const navigate = useNavigate();\n  const isMediumDevice = useMediaQuery('(max-width:900px');\n  const handleClickRow = id => {\n    navigate('/clientes/' + id);\n  };\n  return /*#__PURE__*/_jsxDEV(Paper, {\n    sx: {\n      width: '100%',\n      overflow: 'hidden'\n    },\n    children: [/*#__PURE__*/_jsxDEV(TableContainer, {\n      sx: {\n        height: {\n          xs: '62vh',\n          md: '48vh'\n        }\n      },\n      children: /*#__PURE__*/_jsxDEV(Table, {\n        stickyHeader: true,\n        \"aria-label\": \"sticky table\",\n        size: isMediumDevice ? \"medium\" : \"small\",\n        children: [/*#__PURE__*/_jsxDEV(TableHead, {\n          children: /*#__PURE__*/_jsxDEV(TableRow, {\n            children: [/*#__PURE__*/_jsxDEV(TableCell, {\n              align: \"left\",\n              style: {\n                minWidth: 20\n              },\n              children: \" Nombre \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 34,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              align: \"left\",\n              style: {\n                minWidth: 20\n              },\n              children: \" Apellido \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 35,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              align: \"left\",\n              style: {\n                minWidth: 8\n              },\n              children: \" N\\xFAmero Documento \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 36,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              align: \"left\",\n              style: {\n                minWidth: 8\n              },\n              children: \" Tipo Documento \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 37,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              align: \"left\",\n              style: {\n                minWidth: 8\n              },\n              children: \" Fecha Nacimiento \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 38,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n          id: \"tbClient\",\n          children: props.clientes.map(row => /*#__PURE__*/_jsxDEV(TablesClientRow, {\n            ...row,\n            handleClickRow: handleClickRow\n            // isMediumDevice={isMediumDevice}\n          }, row.idCliente, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      children: /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 8,\n        children: /*#__PURE__*/_jsxDEV(TablePagination, {\n          id: \"paginacionClientes\",\n          labelRowsPerPage: \"Filas\",\n          rowsPerPageOptions: isMediumDevice ? [] : [15, 25, 100],\n          component: \"div\",\n          count: props.clientesTotal,\n          rowsPerPage: props.rowsPerPage,\n          page: props.page,\n          onPageChange: props.handleChangePage,\n          onRowsPerPageChange: props.handleChangeRowsPerPage,\n          backIconButtonProps: {\n            id: 'backPageButtonClients'\n          },\n          nextIconButtonProps: {\n            id: 'nextPageButtonClients'\n          },\n          SelectProps: {\n            id: 'selectRowsPropsClients'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n}\n_s(TablesClient, \"h/oHwUehslKMHNV5RDrTrBIklvE=\", false, function () {\n  return [useNavigate, useMediaQuery];\n});\n_c = TablesClient;\nvar _c;\n$RefreshReg$(_c, \"TablesClient\");","map":{"version":3,"names":["React","useNavigate","Paper","Table","TableBody","TableCell","TableContainer","TableHead","TablePagination","TableRow","useMediaQuery","Grid","TablesClientRow","TablesClient","props","navigate","isMediumDevice","handleClickRow","id","width","overflow","height","xs","md","minWidth","clientes","map","row","idCliente","clientesTotal","rowsPerPage","page","handleChangePage","handleChangeRowsPerPage"],"sources":["C:/Users/fede_/0Repositorios/Trimix-Test/frontend/src/components/ClientesBusqueda/TablesClient.js"],"sourcesContent":["import * as React from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nimport Paper from '@mui/material/Paper';\r\nimport Table from '@mui/material/Table';\r\nimport TableBody from '@mui/material/TableBody';\r\nimport TableCell from '@mui/material/TableCell';\r\nimport TableContainer from '@mui/material/TableContainer';\r\nimport TableHead from '@mui/material/TableHead';\r\nimport TablePagination from '@mui/material/TablePagination';\r\nimport TableRow from '@mui/material/TableRow';\r\n\r\nimport { useMediaQuery, Grid } from '@mui/material';\r\nimport TablesClientRow from './TablesClientRow';\r\n\r\nexport default function TablesClient(props) {\r\n\r\n  const navigate = useNavigate()\r\n\r\n  const isMediumDevice = useMediaQuery('(max-width:900px');\r\n\r\n  const handleClickRow = (id) => {\r\n    navigate('/clientes/' + id)\r\n  }\r\n\r\n  return (\r\n    <Paper sx={{ width: '100%', overflow: 'hidden' }}>\r\n      <TableContainer sx={{ height: { xs: '62vh', md: '48vh' } }} >\r\n        <Table stickyHeader aria-label=\"sticky table\" size={isMediumDevice ? \"medium\" : \"small\"}  >\r\n\r\n          <TableHead>\r\n            <TableRow>\r\n              {/* {!isMediumDevice && <TableCell align='left' style={{ minWidth: 20 }}> Avatar </TableCell>} */}\r\n              <TableCell align='left' style={{ minWidth: 20 }}> Nombre </TableCell>\r\n              <TableCell align='left' style={{ minWidth: 20 }}> Apellido </TableCell>\r\n              <TableCell align='left' style={{ minWidth: 8 }}> NÃºmero Documento </TableCell>\r\n              <TableCell align='left' style={{ minWidth: 8 }}> Tipo Documento </TableCell>\r\n              <TableCell align='left' style={{ minWidth: 8 }}> Fecha Nacimiento </TableCell>\r\n              {/* {!isMediumDevice && <TableCell align='left' style={{ minWidth: 30 }}> Email </TableCell>} */}\r\n              {/* {!isMediumDevice && <TableCell align='left' style={{ minWidth: 30 }}> Estado </TableCell>} */}\r\n            </TableRow>\r\n          </TableHead>\r\n\r\n          <TableBody id='tbClient'>\r\n            {props.clientes.map((row) => (\r\n              <TablesClientRow key={row.idCliente}\r\n                {...row}\r\n                handleClickRow={handleClickRow}\r\n                // isMediumDevice={isMediumDevice}\r\n              />\r\n            ))}\r\n          </TableBody>\r\n\r\n        </Table>\r\n      </TableContainer>\r\n\r\n      <Grid container  >\r\n        <Grid item xs={8} >\r\n          <TablePagination\r\n            id='paginacionClientes'\r\n            labelRowsPerPage=\"Filas\"\r\n            rowsPerPageOptions={isMediumDevice ? [] : [15, 25, 100]}\r\n            component=\"div\"\r\n            count={props.clientesTotal}\r\n            rowsPerPage={props.rowsPerPage}\r\n            page={props.page}\r\n            onPageChange={props.handleChangePage}\r\n            onRowsPerPageChange={props.handleChangeRowsPerPage}\r\n            backIconButtonProps={{id:'backPageButtonClients'}}\r\n            nextIconButtonProps={{id:'nextPageButtonClients'}}\r\n            SelectProps={{id:'selectRowsPropsClients'}}\r\n          />\r\n        </Grid>\r\n      </Grid>\r\n\r\n    </Paper>\r\n  );\r\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}